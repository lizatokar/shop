{"ast":null,"code":"var _jsxFileName = \"D:\\\\Shop\\\\src\\\\Components\\\\Reviews\\\\Reviews.jsx\",\n  _s = $RefreshSig$();\nimport Review from \"./Review/Review\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport './Reviews.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Reviews = () => {\n  _s();\n  let [reviews, setReviews] = useState([{\n    userId: 'Tom',\n    id: 1,\n    title: \"Good product\",\n    body: \"I liked this product so much.\"\n  }, {\n    userId: 'Stephanie',\n    id: 1,\n    title: \"Medium quality product\",\n    body: \"I liked this product but it has some bugs.\"\n  }, {\n    userId: 'Megan',\n    id: 1,\n    title: \"Don't like it\",\n    body: \"it didn't work.\"\n  }]);\n  // useEffect(() => {\n  //     axios.get('https://jsonplaceholder.typicode.com/posts')\n  //         .then(response => setReviews(response.data))\n  // }, []);\n  let [currentReview, setCurrentReview] = useState();\n  const currentReviewHandler = e => {\n    let currentReview = e.currentTarget.value;\n    setCurrentReview(currentReview);\n  };\n  const addReviewHandler = () => {\n    let review = {\n      userId: 'Nick',\n      id: 4,\n      title: \"Great product\",\n      body: currentReview\n    };\n    setReviews([review, ...reviews]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Reviews\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a review:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerInput\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"\",\n        id: \"\",\n        cols: \"30\",\n        rows: \"10\",\n        onChange: currentReviewHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add your name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addReviewHandler,\n      children: \"Add review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reviews:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), reviews.map(review => /*#__PURE__*/_jsxDEV(Review, {\n      review: review\n    }, review.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 39\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n};\n_s(Reviews, \"/y0lp98W8Cu8UrWPxRlwQaDrbK8=\");\n_c = Reviews;\nexport default Reviews;\nvar _c;\n$RefreshReg$(_c, \"Reviews\");","map":{"version":3,"names":["Review","useEffect","useState","axios","jsxDEV","_jsxDEV","Reviews","_s","reviews","setReviews","userId","id","title","body","currentReview","setCurrentReview","currentReviewHandler","e","currentTarget","value","addReviewHandler","review","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","cols","rows","onChange","type","onClick","map","_c","$RefreshReg$"],"sources":["D:/Shop/src/Components/Reviews/Reviews.jsx"],"sourcesContent":["import Review from \"./Review/Review\";\r\nimport {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport './Reviews.css';\r\n\r\nconst Reviews = () => {\r\n    let [reviews, setReviews] = useState([\r\n        {\r\n            userId: 'Tom',\r\n            id: 1,\r\n            title: \"Good product\",\r\n            body: \"I liked this product so much.\"\r\n        },\r\n        {\r\n            userId: 'Stephanie',\r\n            id: 1,\r\n            title: \"Medium quality product\",\r\n            body: \"I liked this product but it has some bugs.\"\r\n        },\r\n        {\r\n            userId: 'Megan',\r\n            id: 1,\r\n            title: \"Don't like it\",\r\n            body: \"it didn't work.\"\r\n        },\r\n    ]);\r\n    // useEffect(() => {\r\n    //     axios.get('https://jsonplaceholder.typicode.com/posts')\r\n    //         .then(response => setReviews(response.data))\r\n    // }, []);\r\n    let [currentReview, setCurrentReview] = useState();\r\n\r\n    const currentReviewHandler = (e) => {\r\n        let currentReview = e.currentTarget.value;\r\n        setCurrentReview(currentReview);\r\n    }\r\n\r\n    const addReviewHandler = () => {\r\n        let review = {\r\n            userId: 'Nick',\r\n            id: 4,\r\n            title: \"Great product\",\r\n            body: currentReview\r\n        }\r\n        setReviews([review, ...reviews]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"Reviews\">\r\n            <h2>Add a review:</h2>\r\n            <div className='containerInput'>\r\n                <textarea name=\"\" id=\"\" cols=\"30\" rows=\"10\" onChange={currentReviewHandler}></textarea>\r\n                <h2>Add your name:</h2>\r\n                <input type='text'/>\r\n            </div>\r\n            <button onClick={addReviewHandler}>Add review</button>\r\n            <h2>Reviews:</h2>\r\n            {\r\n                reviews.map(review => <Review review={review} key={review.id}/>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Reviews;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}